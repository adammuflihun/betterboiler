{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../src/utils/postcodecookie.ts", "../src/utils/airtable.ts", "../src/index.ts"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "export const postcodecookie = () => {\n  //   console.log('cookie');\n\n  $(document).ready(function () {\n    // Function to save value in cookie consent\n    function saveToCookieConsent() {\n      var inputValue = $('[post=\"code\"]').val(); // Get the value from the input element\n      // Save the value in a cookie\n      // Replace 'cookieName' with the desired name for your cookie\n      Cookies.set('cookieName', inputValue, { expires: 365, path: '/' });\n      //   console.log(Cookies.get('cookieName')); // Log the cookie value to the console\n    }\n\n    // Bind click event to the submit button\n    $('[data-form=\"submit-btn\"]').click(function () {\n      saveToCookieConsent(); // Call the saveToCookieConsent function when the button is clicked\n    });\n  });\n};\n", "import { postcodecookie, postcodecookie } from '$utils/postcodecookie';\n\nexport const airtable = () => {\n  const postcodecookies = postcodecookie();\n  const token =\n    'patbind6rCod8yplJ.498983e06b091311d33044ed27b2585e5de01fca6c7dcb768573c3f615167c9c';\n  const baseUrl = 'https://api.airtable.com/v0';\n  const baseId = 'app4yR7Au4zhrkMxV'; // Update with your base ID\n\n  // Specify the table and any desired parameters\n\n  const searchTerm = Cookies.get('cookieName');\n  const searchTermsubtract = searchTerm.substring(0, 3);\n  //   $('[print=\"postalcode\"]').text(searchTerm);\n\n  const tableName = 'betterboiler';\n  const params = {\n    filterByFormula: `SEARCH('${searchTermsubtract}', {filterpostalcode})`,\n    maxRecords: 1, // Limit the maximum number of records to 3\n  };\n\n  // Construct the URL\n  const url = `${baseUrl}/${baseId}/${tableName}?${new URLSearchParams(params)}`;\n\n  // Fetch the data\n  fetch(url, {\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  })\n    .then((response) => response.json())\n    .then((data) => {\n      // Process the retrieved data\n      data.records.forEach((record) => {\n        const addressAttribute = '[profile=\"address\"]';\n        const nameAttribute = '[profile=\"name\"]';\n        // console.log(record.fields.filterpostalcode);\n        const fieldName = record.fields.Name;\n        const address = record.fields.Address;\n        $('[profile=\"name\"]').text(fieldName);\n        $('[profile=\"address\"]').text(address);\n        // console.log(record.fields.postalcode);\n      });\n    })\n    .catch((error) => {\n      // Handle any errors\n      console.error(error);\n    });\n};\n", "import { airtable } from '$utils/airtable';\nimport { postcodecookie } from '$utils/postcodecookie';\n\nwindow.Webflow ||= [];\nwindow.Webflow.push(async () => {});\n\npostcodecookie();\nairtable();\n"],
  "mappings": ";;;AAAA,MAAI,YAAY,GAAG,iCAAsB,EAAE,iBAAiB,UAAU,MAAM,SAAS,OAAO,CAAC;;;ACAtF,MAAM,iBAAiB,MAAM;AAGlC,MAAE,QAAQ,EAAE,MAAM,WAAY;AAE5B,eAAS,sBAAsB;AAC7B,YAAI,aAAa,EAAE,eAAe,EAAE,IAAI;AAGxC,gBAAQ,IAAI,cAAc,YAAY,EAAE,SAAS,KAAK,MAAM,IAAI,CAAC;AAAA,MAEnE;AAGA,QAAE,0BAA0B,EAAE,MAAM,WAAY;AAC9C,4BAAoB;AAAA,MACtB,CAAC;AAAA,IACH,CAAC;AAAA,EACH;;;AChBO,MAAM,WAAW,MAAM;AAC5B,UAAM,kBAAkB,eAAe;AACvC,UAAM,QACJ;AACF,UAAM,UAAU;AAChB,UAAM,SAAS;AAIf,UAAM,aAAa,QAAQ,IAAI,YAAY;AAC3C,UAAM,qBAAqB,WAAW,UAAU,GAAG,CAAC;AAGpD,UAAM,YAAY;AAClB,UAAM,SAAS;AAAA,MACb,iBAAiB,WAAW;AAAA,MAC5B,YAAY;AAAA;AAAA,IACd;AAGA,UAAM,MAAM,GAAG,WAAW,UAAU,aAAa,IAAI,gBAAgB,MAAM;AAG3E,UAAM,KAAK;AAAA,MACT,SAAS;AAAA,QACP,eAAe,UAAU;AAAA,MAC3B;AAAA,IACF,CAAC,EACE,KAAK,CAAC,aAAa,SAAS,KAAK,CAAC,EAClC,KAAK,CAAC,SAAS;AAEd,WAAK,QAAQ,QAAQ,CAAC,WAAW;AAC/B,cAAM,mBAAmB;AACzB,cAAM,gBAAgB;AAEtB,cAAM,YAAY,OAAO,OAAO;AAChC,cAAM,UAAU,OAAO,OAAO;AAC9B,UAAE,kBAAkB,EAAE,KAAK,SAAS;AACpC,UAAE,qBAAqB,EAAE,KAAK,OAAO;AAAA,MAEvC,CAAC;AAAA,IACH,CAAC,EACA,MAAM,CAAC,UAAU;AAEhB,cAAQ,MAAM,KAAK;AAAA,IACrB,CAAC;AAAA,EACL;;;AC7CA,SAAO,YAAY,CAAC;AACpB,SAAO,QAAQ,KAAK,YAAY;AAAA,EAAC,CAAC;AAElC,iBAAe;AACf,WAAS;",
  "names": []
}
